name: Auto Tag and Release on Version Change

on:
  push:
    branches:
      - main

jobs:
  tag:
    name: Tag if Version Changed
    runs-on: ubuntu-latest
    outputs:
      current_version: ${{ steps.extract.outputs.current }}
      version_changed: ${{ steps.extract.outputs.version_changed }}
    steps:
      - name: Checkout repository with history
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies extraction dependencies
        run: |
          python -m pip install --upgrade pip toml

      - name: Extract versions and determine change
        id: extract
        run: |
          PREVIOUS_VERSION=$(git show HEAD^:pyproject.toml | python -c "import sys, toml; print(toml.loads(sys.stdin.read())['project']['version'])")
          CURRENT_VERSION=$(cat pyproject.toml | python -c "import sys, toml; print(toml.loads(sys.stdin.read())['project']['version'])")
          echo "previous=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          if [ "$PREVIOUS_VERSION" != "$CURRENT_VERSION" ]; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Create git tag if version changed
        if: ${{ steps.extract.outputs.version_changed == 'true' }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag "v${{ steps.extract.outputs.current }}"
          git push origin "v${{ steps.extract.outputs.current }}"

  release:
    name: Release with New Tag
    runs-on: ubuntu-latest
    needs: tag
    if: ${{ needs.tag.outputs.version_changed == 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip build

      - name: Build distribution packages
        run: |
          python -m build -s

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: 'dist/*'
          tag_name: 'v${{needs.tag.outputs.current_version}}'
